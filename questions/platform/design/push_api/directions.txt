Background:

Each member has installed our mobile application which assigns their member_id to an "installation_id".  This is a
unique identifier for their specific mobile hardware.  We like to send messages to these installations to alert members
about important events, e.g. a claim being processed

This service is a simple service that receives claims from an external vendor, processes them, and save the results into
the database.  We'd like to send notifications to our members phones about these events.

Setup:

Pushing a notification to a phone requires that we communicate with the Apple Push Notification Service (APNS).  The
APNS conveniently handles the inner workings of sending these notifications.  Also conveniently, there is a locally
running process which mimics the APNS.

Our server listens on port 8888 and has two available functions:

1) send_push


    POST to localhost:8888/send_push
        - HTTP Header: Content-Type:application/json
        - JSON : {"installation_id": <int>, "message": <string>}

    The service will return a json object: {"api_status_code": [1 | 2 | 3]}

    1: The push notification was sent to the device
    2: The device was not reachable
    3: The user has disabled push notifications for our application

    Warning! The APNS will disable our account if we continually try to send notifications to unreachable devices or
    devices that have explicitly disabled our application.

2) device_status

    POST to localhost:8888/device_status
        - HTTP Header: Content-Type:application/json
        - JSON : {"installation_id": <int>}

    returns: {"push_enabled": <true|false>}


run python data_loader.py to kickoff the process.  Assume that this process is running on a cron and runs every 5 min.